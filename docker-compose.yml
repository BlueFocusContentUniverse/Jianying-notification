version: '3.8'

services:
  # Redis service for Celery broker and result backend
  redis:
    image: redis:7-alpine
    container_name: jianying-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: jianying-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-jianying_notification}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user}"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Celery worker
  celery-worker:
    build: .
    container_name: jianying-celery-worker
    command: celery -A app.celery_app worker --loglevel=info --concurrency=4
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - DATABASE_URL=postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-jianying_notification}
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./app:/app/app

  # Celery beat (optional - for scheduled tasks)
  celery-beat:
    build: .
    container_name: jianying-celery-beat
    command: celery -A app.celery_app beat --loglevel=info
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - DATABASE_URL=postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-jianying_notification}
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./app:/app/app

  # Flower - Celery monitoring tool (optional)
  flower:
    build: .
    container_name: jianying-flower
    command: celery -A app.celery_app flower --port=5555
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery-worker
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:
